plugins {
    id 'maven-publish'
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id "io.github.juuxel.loom-quiltflower" version "1.+"
}

group = project.maven_group
version = project.mod_version
archives_base_name = project.archives_base_name;
minecraft_version = project.minecraft_version
mappings_version = project.mappings_version
fabric_loader_version = project.fabric_loader_version
fabric_api_version = project.fabric_api_version

repositories {
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.terraformersmc.com/releases/' }
    maven { url 'https://api.modrinth.com/maven' }
    maven { url 'https://maven.quiltmc.org/repository/release/' }
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings loom.layered {
        mappings("org.quiltmc:quilt-mappings:$minecraft_version+build.$mappings_version:intermediary-v2")
        officialMojangMappings()
    }
    modImplementation (include("com.github.Kingdom-of-The-Moon:FiguraRewriteRewrite:${figura_build_version}"))
    modImplementation "net.fabricmc:fabric-loader:$fabric_loader_version"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_api_version"
}

processResources {
    Map<String, Object> properties = new HashMap<String, Object>();
    properties.put("minecraft_version", minecraft_version);
    properties.put("mod_version", version);
    properties.put("fabric_loader_version", fabric_loader_version);
    properties.put("fabric_api_version", fabric_api_version);

    properties.forEach((k,v) -> inputs.property(k,v));
    filesMatching("fabric.mod.json") {
        expand(properties);
    }
}

jar {
    rename { "${archives_base_name}_${mod_version}" }
}

test {
    useJUnitPlatform()
}